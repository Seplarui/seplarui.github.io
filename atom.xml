<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> - Articles</title>
    <description>Hoy he programado</description>
    <link>
    </link>
    
      
      <item>
        <title>Angular - Pruebas unitarias con Jasmine y Karma</title>
        
          <description>&lt;p&gt;
    &lt;h1&gt;Contenido del curso.&lt;/h1&gt;
    &lt;ul&gt;
        &lt;h3&gt;Introducción&lt;/h3&gt;
        &lt;li&gt;Presentación del curso&lt;/li&gt;
        &lt;li&gt;Instructor&lt;/li&gt;
        &lt;li&gt;Valoración del curso&lt;/li&gt;
        &lt;li&gt;Software necesario&lt;/li&gt;
        &lt;h3&gt;Conceptos generales&lt;/h3&gt;
        &lt;li&gt;¿Qué es un test unitario?&lt;/li&gt;
        &lt;li&gt;Unit test - Integration test - E2E&lt;/li&gt;
        &lt;li&gt;¿Cómo funciona un test unitario?&lt;/li&gt;
        &lt;li&gt;¿Cuál es el mejor momento para hacer las pruebas?&lt;/li&gt;
        &lt;li&gt;Cobertura/Coverage&lt;/li&gt;
        &lt;li&gt;Jasmine y Karma&lt;/li&gt;
        &lt;h3&gt;Jasmine y Karma&lt;/h3&gt;
        &lt;li&gt;Archivos de prueba en un proyecto&lt;/li&gt;
        &lt;li&gt;Configuración de Karma&lt;/li&gt;
        &lt;li&gt;Carpeta coverage&lt;/li&gt;
        &lt;li&gt;Lanzar tests&lt;/li&gt;
        &lt;li&gt;Nueva dependencia en Karma (Angular 11 o superior)&lt;/li&gt;
        &lt;h3&gt;Test unitario&lt;/h3&gt;
        &lt;li&gt;Aplicación a testear&lt;/li&gt;
        &lt;li&gt;Instalar JSON Server&lt;/li&gt;
        &lt;li&gt;Estructura de un fichero de pruebas (.spec)&lt;/li&gt;
        &lt;li&gt;Configurar TestBed&lt;/li&gt;
        &lt;li&gt;Crear primer test&lt;/li&gt;
        &lt;li&gt;Fallos comunes configurando el TestBed&lt;/li&gt;
        &lt;li&gt;Test a métodos con return&lt;/li&gt;
        &lt;li&gt;Test a métodos sin return (uso de spyOn)&lt;/li&gt;
        &lt;li&gt;Test a métodos privados&lt;/li&gt;
        &lt;li&gt;Finalizando cart component&lt;/li&gt;
        &lt;li&gt;Test a suscripciones (subscribe-Observable)&lt;/li&gt;
        &lt;li&gt;Mock de un servicio&lt;/li&gt;
        &lt;li&gt;xit, fit, xdescribe, fdescribe&lt;/li&gt;
        &lt;li&gt;beforeEach, beforeAll, afterEach, afterAll&lt;/li&gt;
        &lt;li&gt;Depurar en karma&lt;/li&gt;
        &lt;li&gt;Test a un pipe&lt;/li&gt;
        &lt;li&gt;Test a un servicio (Con peticiones a API)&lt;/li&gt;
        &lt;li&gt;Finalizando book service&lt;/li&gt;
        &lt;li&gt;Alternativas para instanciar un componente o servicio&lt;/li&gt;
        &lt;h3&gt;Ampliación&lt;/h3&gt;
        &lt;li&gt;Introducción a los test de integración&lt;/li&gt;
        &lt;li&gt;Automatizar test antes de generar el build&lt;/li&gt;
        &lt;li&gt;Extensiones de VSCode que utilizo&lt;/li&gt;
        &lt;h3&gt;Cierre del curso&lt;/h3&gt;
        &lt;li&gt;Consejos finales&lt;/li&gt;
        &lt;li&gt;Despedida&lt;/li&gt;
        &lt;li&gt;BONUS - Información extra&lt;/li&gt;
    &lt;/ul&gt;

</description>
        
        <pubDate>Mon, 07 Jun 2021 10:00:00 +0200</pubDate>
        <link>
        /curso_angular_pruebas_unitarias_jasmine_karma</link>
        <guid isPermaLink="true">/curso_angular_pruebas_unitarias_jasmine_karma</guid>
      </item>
      
    
      
      <item>
        <title>Acceso Rick And Morty API con Angular.</title>
        
          <description>&lt;h1&gt;Acceso Rick And Morty API con Angular.&lt;/h1&gt;
&lt;p&gt;
    En este proyecto he utilizado la API pública y gratuita de Rick &amp; Morty: &lt;a href=&quot;https://rickandmortyapi.com/&quot; target=&quot;_blank&quot;&gt;RickAndMorty API&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
    Podemos mostrar la lista de todos los personajes, buscar por personaje, ir a una página concreta (incluye paginación) y mostrar el
    detalle de cada uno de los personajes.
    La aplicación está desplegada en Firebase y se puede probar en esta url: &lt;a href=&quot;https://spr-rickmorty.web.app/&quot; target=&quot;_blank&quot;&gt;RickAndMorty&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
    FRONTEND: Angular y Bootstrap.
&lt;/p&gt;
&lt;p&gt;
    Aquí un video de su funcionamiento:

</description>
        
        <pubDate>Sun, 11 Apr 2021 10:00:00 +0200</pubDate>
        <link>
        /proyecto_Rick_Morty</link>
        <guid isPermaLink="true">/proyecto_Rick_Morty</guid>
      </item>
      
    
      
      <item>
        <title>API GITHUB</title>
        
          <description>&lt;h1&gt;Acceso a la API de GitHub.&lt;/h1&gt;
&lt;p&gt;
    En este proyecto he utilizado la API de Github para mostrar los commits realizados por cada proyecto.
&lt;/p&gt;
&lt;p&gt;
    FRONTEND: Angular.
&lt;/p&gt;
&lt;p&gt;
    Aquí un video de su funcionamiento:

</description>
        
        <pubDate>Thu, 08 Apr 2021 10:00:00 +0200</pubDate>
        <link>
        /proyecto_API_GITHUB</link>
        <guid isPermaLink="true">/proyecto_API_GITHUB</guid>
      </item>
      
    
      
      <item>
        <title>Introducción a Spring Web MVC 5.0 con Spring Boot</title>
        
          <description>&lt;p&gt;
    &lt;h1&gt;Contenido del curso.&lt;/h1&gt;
    &lt;ul&gt;
        &lt;li&gt;Introducción&lt;/li&gt;
        &lt;li&gt;Spring Core&lt;/li&gt;
        &lt;li&gt;Spring Core, Spring MVC y Spring Boot&lt;/li&gt;
        &lt;li&gt;Spring MVC: Controllers&lt;/li&gt;
        &lt;li&gt;Spring MVC: Vistas&lt;/li&gt;
        &lt;li&gt;Spring Security&lt;/li&gt;
        &lt;li&gt;Packaging&lt;/li&gt;
        &lt;li&gt;Contenido extra&lt;/li&gt;
    &lt;/ul&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;img src=&quot;../assets/images/cursos/Introduccion_a_Spring_Web_MVC_5.0_con_Spring_Boot.jpg&quot; alt =&quot;diploma curso Introducción_a_Spring_Web_MVC_5.0_con_Spring_Boot&quot;&gt;
&lt;/p&gt;</description>
        
        <pubDate>Mon, 05 Apr 2021 10:00:00 +0200</pubDate>
        <link>
        /curso_spring_mvc</link>
        <guid isPermaLink="true">/curso_spring_mvc</guid>
      </item>
      
    
      
      <item>
        <title>Añadir Bootstrap a un proyecto Angular.</title>
        
          <description>&lt;br&gt;
&lt;h1&gt;Añadir Bootstrap a un proyecto Angular.&lt;/h1&gt;
&lt;p&gt;
    En primer lugar accedemos a la página web de Bootstrap:
    &lt;a href=&quot;www.getbootstrap.com&quot; target=&quot;_blank&quot;&gt;Bootstrap&lt;/a&gt;

</description>
        
        <pubDate>Mon, 05 Apr 2021 10:00:00 +0200</pubDate>
        <link>
        /apuntes_angular</link>
        <guid isPermaLink="true">/apuntes_angular</guid>
      </item>
      
    
      
      <item>
        <title>CRUD CLIENTES</title>
        
          <description>&lt;h1&gt;Gestión CLIENTES.&lt;/h1&gt;
&lt;p&gt;
En este proyecto he realizado una aplicación Web de gestión de clientes.
He utilizado en la parte de backend se ha creado una API REST con NodeJS y el framework Express y en la parte Frontend se ha utilizado Angular.
&lt;/p&gt;
&lt;p&gt;
    &lt;p&gt;
        FRONTEND: Angular y Bootstrap.
    &lt;/p&gt;
&lt;/p&gt;
&lt;p&gt;
Aquí un video de su funcionamiento:

</description>
        
        <pubDate>Sun, 04 Apr 2021 10:00:00 +0200</pubDate>
        <link>
        /proyecto_CRUD</link>
        <guid isPermaLink="true">/proyecto_CRUD</guid>
      </item>
      
    
      
      <item>
        <title>Comandos Jekyll</title>
        
          <description>&lt;h1&gt;Comandos Jekyll.&lt;/h1&gt;
&lt;p&gt;
Para poder poner en marcha nuestro servidor con Jekyll hay que lanzar el siguiente comando:

</description>
        
        <pubDate>Fri, 02 Apr 2021 10:00:00 +0200</pubDate>
        <link>
        /comandos_jekyll</link>
        <guid isPermaLink="true">/comandos_jekyll</guid>
      </item>
      
    
  </channel>
</rss>
